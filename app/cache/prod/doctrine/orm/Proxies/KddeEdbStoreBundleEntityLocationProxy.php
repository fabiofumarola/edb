<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class KddeEdbStoreBundleEntityLocationProxy extends \Kdde\EdbStoreBundle\Entity\Location implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setLocusInventionis($locusInventionis)
    {
        $this->__load();
        return parent::setLocusInventionis($locusInventionis);
    }

    public function getLocusInventionis()
    {
        $this->__load();
        return parent::getLocusInventionis();
    }

    public function setConservationCity($conservationCity)
    {
        $this->__load();
        return parent::setConservationCity($conservationCity);
    }

    public function getConservationCity()
    {
        $this->__load();
        return parent::getConservationCity();
    }

    public function setConservationBuilding($conservationBuilding)
    {
        $this->__load();
        return parent::setConservationBuilding($conservationBuilding);
    }

    public function getConservationBuilding()
    {
        $this->__load();
        return parent::getConservationBuilding();
    }

    public function setConservationSpecificPosition($conservationSpecificPosition)
    {
        $this->__load();
        return parent::setConservationSpecificPosition($conservationSpecificPosition);
    }

    public function getConservationSpecificPosition()
    {
        $this->__load();
        return parent::getConservationSpecificPosition();
    }

    public function setPertinenceArea($pertinenceArea)
    {
        $this->__load();
        return parent::setPertinenceArea($pertinenceArea);
    }

    public function getPertinenceArea()
    {
        $this->__load();
        return parent::getPertinenceArea();
    }

    public function setContextPosition($contextPosition)
    {
        $this->__load();
        return parent::setContextPosition($contextPosition);
    }

    public function getContextPosition()
    {
        $this->__load();
        return parent::getContextPosition();
    }

    public function setSpecificContextPosition($specificContextPosition)
    {
        $this->__load();
        return parent::setSpecificContextPosition($specificContextPosition);
    }

    public function getSpecificContextPosition()
    {
        $this->__load();
        return parent::getSpecificContextPosition();
    }

    public function setPertinenceContext(\Kdde\EdbStoreBundle\Entity\Context $pertinenceContext)
    {
        $this->__load();
        return parent::setPertinenceContext($pertinenceContext);
    }

    public function getPertinenceContext()
    {
        $this->__load();
        return parent::getPertinenceContext();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'locusInventionis', 'conservationCity', 'conservationBuilding', 'conservationSpecificPosition', 'pertinenceArea', 'pertinenceContext', 'contextPosition', 'specificContextPosition');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}